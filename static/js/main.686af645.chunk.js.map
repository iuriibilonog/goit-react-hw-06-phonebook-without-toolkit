{"version":3,"sources":["components/FilterField/FilterField.module.css","redux/contacts/contacts-type.js","redux/contacts/contacts-redusers.js","redux/store.js","redux/contacts/contacts-actions.js","components/ContactsForm/ContactsForm.jsx","components/Contacts/Contacts.jsx","components/FilterField/FilterField.jsx","App.js","index.js","components/ContactsForm/ContactsForm.module.css","components/Contacts/Contacts.module.css","App.module.css"],"names":["module","exports","combineReducers","items","state","type","payload","types","contactsNames","map","item","name","toLowerCase","includes","alert","filter","contact","id","contactsPersistConfig","key","storage","whitelist","contactsPersistedReducer","persistReducer","contactsReduser","rootReduser","contacts","store","createStore","composeWithDevTools","persistor","persistStore","number","v4","contactId","value","ContactsForm","dispatch","useDispatch","useState","setName","setNumber","handlerOnChange","e","target","reset","onSubmit","preventDefault","contactsActions","className","s","form","inputTitle","inputField","pattern","title","required","onChange","addContactBtn","Contacts","useSelector","NormalizeFilter","contactsArr","contactsList","contactItem","contactsName","contactsNumber","delBtn","onClick","FilterField","filterTitle","filterInput","App","app","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.686af645.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterTitle\":\"FilterField_filterTitle__3Ek9F\",\"filterInput\":\"FilterField_filterInput__1dQlz\"};","export default {\r\n  ADD: \"contacts/add\",\r\n  DELETE: \"contacts/delete\",\r\n  CHANGE_FILTER: \"contacts/changeFilter\",\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport types from \"./contacts-type\";\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      const contactsNames = state.map((item) => item.name.toLowerCase());\r\n\r\n      if (contactsNames.includes(payload.name.toLowerCase())) {\r\n        alert(`${payload.name} is already in contacts.`);\r\n      } else {\r\n        return [payload, ...state];\r\n      }\r\n\r\n    case types.DELETE:\r\n      return state.filter((contact) => contact.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: items,\r\n  filter: filter,\r\n});\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactsReduser from \"./contacts/contacts-redusers\";\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  whitelist: [\"items\"],\r\n};\r\n\r\nconst contactsPersistedReducer = persistReducer(\r\n  contactsPersistConfig,\r\n  contactsReduser\r\n);\r\nconst rootReduser = combineReducers({\r\n  contacts: contactsPersistedReducer,\r\n});\r\n\r\nexport const store = createStore(rootReduser, composeWithDevTools());\r\n\r\nexport const persistor = persistStore(store);\r\n","import types from \"./contacts-type\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst addNewContact = ({ name, number }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: v4(),\r\n    name: name,\r\n    number: number,\r\n  },\r\n});\r\n\r\nconst deleteContact = (contactId) => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = (value) => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nexport default { addNewContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './ContactsForm.module.css'\n\n\nfunction ContactsForm() {\n\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  const handlerOnChange = (e) => {\n    const { name, value } = e.target\n    \n    switch (name) {\n      case 'name': return setName(value);\n      case 'number': return setNumber(value);\n      default: return;\n    }\n  }\n\n  const hendlerOnSubmit = (e) => {\n    e.preventDefault();\n    dispatch(contactsActions.addNewContact({ name, number }))\n    reset()\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('')\n  }\n\n\n\n  \n    return (\n      <form onSubmit={hendlerOnSubmit} className={s.form}>\n        <label className={s.inputTitle}> Name\n          <input className={s.inputField}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handlerOnChange}\n          />\n        </label>\n\n        <label className={s.inputTitle}> Number\n          <input className={s.inputField}\n            type=\"tel\"\n            value={number}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handlerOnChange}\n          />\n        </label>\n\n        <button className={s.addContactBtn} type='submit'>Add Contact</button>\n      </form>\n    )\n  }\n\n\nContactsForm.propTypes = {\n    addNewContact: PropTypes.func\n}\n  \n\n\nexport default ContactsForm;","import s from './Contacts.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions'; \n\n\nconst Contacts = () => {\n  \n  const dispatch = useDispatch();\n  const { items, filter } = useSelector((state) => state.contacts)\n\n\n  const NormalizeFilter = filter.toLowerCase();\n\n  const contactsArr =  items.filter((item) =>\n      item.name.toLowerCase().includes(NormalizeFilter)\n    );\n\n  return (\n    <ul className={s.contactsList}>\n      {contactsArr.map(({ name, number, id}) =>\n        <li key={id} className={s.contactItem}>\n          <p className={s.contactsName}> {name}: <span className={s.contactsNumber}>{number}</span></p> \n          <button className={s.delBtn} onClick={()=> dispatch(contactsActions.deleteContact(id))} type=\"button\">Delete</button>\n        </li>)\n      \n      }\n    </ul>\n    \n  )\n}\n\nContacts.propTypes = {\n  contactsArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n      \n  ),\n  deleteContact: PropTypes.func\n  \n}\n\nexport default Contacts;\n","import s from './FilterField.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsActions  from '../../redux/contacts/contacts-actions'; \n\n\nconst FilterField = () => {\n\n  const { filter } = useSelector((state) => state.contacts);\n  const dispatch = useDispatch();\n\n\n  return (\n    <label className={s.filterTitle}> Find contacts by name\n      <input className={s.filterInput} type=\"text\" value={filter} onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}/>\n    </label>\n  )\n}\n\nFilterField.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n}\n\nexport default FilterField;","import s from \"./App.module.css\";\nimport \"./App.module.css\";\nimport ContactsForm from \"./components/ContactsForm\";\nimport Contacts from \"./components/Contacts\";\nimport FilterField from \"./components/FilterField\";\n\nfunction App() {\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactsForm />\n      <h2 className={s.title}>Contacts</h2>\n      <FilterField />\n      <Contacts />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3ohwa\",\"inputTitle\":\"ContactsForm_inputTitle__2vPVU\",\"inputField\":\"ContactsForm_inputField__1Tedy\",\"addContactBtn\":\"ContactsForm_addContactBtn__3OTYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__xSCl5\",\"contactItem\":\"Contacts_contactItem__Wkfr_\",\"contactsName\":\"Contacts_contactsName__1O_7-\",\"contactsNumber\":\"Contacts_contactsNumber__3K53I\",\"delBtn\":\"Contacts_delBtn__1qeaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3vpGB\",\"title\":\"App_title__2-jbU\"};"],"sourceRoot":""}